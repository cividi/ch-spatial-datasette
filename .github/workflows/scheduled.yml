name: Fetch latest data and deploy with Datasette

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Deployment run'

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the datasette
      uses: actions/checkout@v2
    - name: Check out ch-municipalities
      uses: actions/checkout@v2
      with:
        repository: cividi/ch-municipalities
        path: ch-municipalities
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - uses: actions/cache@v2
      name: Configure pip caching
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build internal database
      run: python build_database.py
    - name: Set variables to decide if we should deploy
      id: decide_variables
      run: |-
        echo "##[set-output name=latest;]$(datasette inspect cividi.db | jq '.cividi.hash' -r)"
        echo "##[set-output name=deployed;]$(curl -s https://datasette.cividi.space/-/databases.json | jq '.[0].hash' -r)"
    - name: Set up a Vercel Deployment
      if: github.event_name == 'workflow_dispatch' || steps.decide_variables.outputs.latest != steps.decide_variables.outputs.deployed
      uses: BetaHuhn/deploy-to-vercel-action@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    - name: Deploy to Cloud Run
      if: github.event_name == 'workflow_dispatch' || steps.decide_variables.outputs.latest != steps.decide_variables.outputs.deployed
      run: |-
        datasette publish vercel cividi.db \
          --project ${{ secrets.VERCEL_PROJECT_ID }} \
          -m metadata.json \
          --branch main \
          --install=datasette-vega \
          --install=datasette-copyable \
          --install=datasette-graphql \
          --install=datasette-yaml \
          --install=datasette-atom \
          --install=datasette-export-notebook \
          --install=datasette-publish-vercel \
          --install=datapackage-to-datasette \
          --extra-options="--config facet_time_limit_ms:3000 --config sql_time_limit_ms:3000"
